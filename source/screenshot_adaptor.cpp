/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp org.freedesktop.portal.Screenshot.xml -a
 * screenshot_adaptor
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "headers/screenshot_adaptor.h"
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QMetaObject>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class ScreenshotAdaptor
 */

ScreenshotAdaptor::ScreenshotAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent) {
  // constructor
  setAutoRelaySignals(true);
}

ScreenshotAdaptor::~ScreenshotAdaptor() {
  // destructor
}

uint ScreenshotAdaptor::version() const {
  // get the value of property version
  return qvariant_cast<uint>(parent()->property("version"));
}

QDBusObjectPath ScreenshotAdaptor::PickColor(const QString &parent_window,
                                             const QVariantMap &options) {
  // handle method call org.freedesktop.portal.Screenshot.PickColor
  QDBusObjectPath handle;
  QMetaObject::invokeMethod(
      parent(), "PickColor", Q_RETURN_ARG(QDBusObjectPath, handle),
      Q_ARG(QString, parent_window), Q_ARG(QVariantMap, options));
  return handle;
}

QDBusObjectPath ScreenshotAdaptor::Screenshot(const QString &parent_window,
                                              const QVariantMap &options) {
  // handle method call org.freedesktop.portal.Screenshot.Screenshot
  QDBusObjectPath handle;
  QMetaObject::invokeMethod(
      parent(), "Screenshot", Q_RETURN_ARG(QDBusObjectPath, handle),
      Q_ARG(QString, parent_window), Q_ARG(QVariantMap, options));
  return handle;
}
