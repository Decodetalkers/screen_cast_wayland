/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp org.freedesktop.portal.Screenshot.xml -p screenshot_interface
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef SCREENSHOT_INTERFACE_H
#define SCREENSHOT_INTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.freedesktop.portal.Screenshot
 */
class OrgFreedesktopPortalScreenshotInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.portal.Screenshot"; }

public:
    OrgFreedesktopPortalScreenshotInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~OrgFreedesktopPortalScreenshotInterface();

    Q_PROPERTY(uint version READ version)
    inline uint version() const
    { return qvariant_cast< uint >(property("version")); }

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QDBusObjectPath> PickColor(const QString &parent_window, const QVariantMap &options)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(parent_window) << QVariant::fromValue(options);
        return asyncCallWithArgumentList(QStringLiteral("PickColor"), argumentList);
    }

    inline QDBusPendingReply<QDBusObjectPath> Screenshot(const QString &parent_window, const QVariantMap &options)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(parent_window) << QVariant::fromValue(options);
        return asyncCallWithArgumentList(QStringLiteral("Screenshot"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace org {
  namespace freedesktop {
    namespace portal {
      typedef ::OrgFreedesktopPortalScreenshotInterface Screenshot;
    }
  }
}

typedef org::freedesktop::portal::Screenshot WaylandScreen;
#endif
